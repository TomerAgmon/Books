{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","webpack:///src/app/core/auth/auth.module.ts","webpack:///src/app/core/auth/services/auth.service.ts","webpack:///src/app/core/auth/store/auth.effects.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/header/header.module.ts","webpack:///src/app/core/header/header/header.component.ts","webpack:///src/app/core/header/header/header.component.html"],"names":["MatDivider","_vertical","_inset","value","ɵfac","MatDivider_Factory","t","ɵcmp","type","selectors","hostAttrs","hostVars","hostBindings","MatDivider_HostBindings","rf","ctx","vertical","inset","inputs","decls","vars","template","MatDivider_Template","styles","encapsulation","changeDetection","propDecorators","args","selector","host","None","OnPush","MatDividerModule","ɵmod","ɵinj","factory","MatDividerModule_Factory","imports","ngJitMode","declarations","exports","_c0","_c1","_c2","_c3","MatListOption_mat_pseudo_checkbox_2_Template","ctx_r0","selected","disabled","_c4","_c5","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MatNavList","arguments","_stateChanges","next","complete","MatNavList_Factory","ɵMatNavList_BaseFactory","disableRipple","exportAs","features","ngContentSelectors","MatNavList_Template","MatList","_elementRef","_getListType","nativeElement","classList","add","nodeName","toLowerCase","MatList_Factory","MatList_Template","ctorParameters","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","ɵdir","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","_changeDetectorRef","navList","list","_isInteractiveList","_destroyed","_disabled","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","subscribe","markForCheck","_lines","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","_t","_avatar","first","_icon","MatListItem_HostBindings","consts","MatListItem_Template","_isRippleDisabled","directives","decorators","descendants","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","provide","useExisting","MatSelectionList","multi","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","checkboxPosition","_inputsInitialized","_value","some","compareWith","_setSelected","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","_text","textContent","multiple","toggle","_emitChangeEvent","_setFocusedOption","_onTouched","selectedOptions","select","deselect","_color","color","newValue","isSelected","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","viewQuery","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","MatListOption_Template","tabIndex","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_keyManager","options","withWrap","withTypeAhead","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","changes","_updateTabIndex","changed","event","added","item","removed","disableRippleChanges","colorChanges","firstChange","_markOptionsForCheck","_isDestroyed","_setAllOptionsSelected","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","length","Math","min","activeItem","keyCode","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","preventDefault","setFirstItemActive","setLastItemActive","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","emit","activeIndex","setActiveItem","values","isDisabled","fn","forEach","correspondingOption","find","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","hasChanged","index","indexOf","_markForCheck","setTimeout","Error","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_focus_HostBindingHandler","_onFocus","MatSelectionList_keydown_HostBindingHandler","$event","_keydown","toString","outputs","MatSelectionList_Template","String","providers","MatListModule","MatListModule_Factory","MatDrawerContainer_div_0_Template","_r3","MatDrawerContainer_div_0_Template_div_click_0_listener","ctx_r2","_onBackdropClicked","_isShowingBackdrop","MatDrawerContainer_mat_drawer_content_3_Template","MatSidenavContainer_div_0_Template","MatSidenavContainer_div_0_Template_div_click_0_listener","MatSidenavContainer_mat_sidenav_content_3_Template","matDrawerAnimations","transformDrawer","throwMatDuplicatedDrawerError","position","MAT_DRAWER_DEFAULT_AUTOSIZE","providedIn","MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY","MAT_DRAWER_CONTAINER","MatDrawerContent","_container","elementRef","scrollDispatcher","ngZone","_contentMarginChanges","MatDrawerContent_Factory","MatDrawerContainer","MatDrawerContent_HostBindings","_contentMargins","left","right","MatDrawerContent_Template","MatDrawer","_focusTrapFactory","_focusMonitor","_platform","_ngZone","_doc","_elementFocusedBeforeDrawerWasOpened","_enableAnimations","_position","_mode","_disableClose","_opened","_animationStarted","_animationEnd","_animationState","openedChange","onPositionChanged","_modeChanged","opened","activeElement","_takeFocus","_restoreFocus","runOutsideAngular","disableClose","run","close","stopPropagation","x","y","fromState","toState","autoFocus","_focusTrap","focusInitialElementWhenReady","hasMovedFocus","activeEl","contains","focusVia","_openedVia","blur","create","_updateFocusTrapState","isBrowser","destroy","openedVia","isOpen","open","enabled","mode","_autoFocus","o","e","offsetWidth","MatDrawer_Factory","MatDrawer_HostBindings","MatDrawer_animation_transform_start_HostBindingHandler","_animationStartListener","MatDrawer_animation_transform_done_HostBindingHandler","_animationDoneListener","_openedStream","openedStart","_closedStream","closedStart","MatDrawer_Template","data","animation","undefined","animations","_dir","viewportRuler","defaultAutosize","_animationMode","_drawers","backdropClick","_doCheckSubject","change","_validateDrawers","updateContentMargins","_autosize","_allDrawers","drawer","reset","notifyOnChanges","_watchDrawerToggle","_watchDrawerPosition","_watchDrawerMode","_isDrawerOpen","_start","_end","_left","_width","width","_right","_isPushed","_setContainerClass","onMicrotaskEmpty","asObservable","isAdd","className","remove","_closeModalDrawer","_canHaveBackdrop","_backdropOverride","_userContent","_content","MatDrawerContainer_Factory","MatDrawerContainer_ContentQueries","MatDrawerContainer_Query","MatDrawerContainer_HostBindings","autosize","hasBackdrop","MatDrawerContainer_Template","MatSidenavContent","changeDetectorRef","container","MatSidenavContent_Factory","MatSidenavContainer","MatSidenavContent_HostBindings","MatSidenavContent_Template","MatSidenav","_fixedInViewport","_fixedTopGap","_fixedBottomGap","MatSidenav_Factory","ɵMatSidenav_BaseFactory","MatSidenav_HostBindings","fixedInViewport","fixedTopGap","fixedBottomGap","MatSidenav_Template","MatSidenavContainer_Factory","ɵMatSidenavContainer_BaseFactory","MatSidenavContainer_ContentQueries","MatSidenavContainer_HostBindings","MatSidenavContainer_Template","MatSidenavModule","MatSidenavModule_Factory","AuthModule","forFeature","AuthService","username","password","AuthEffects","actions$","authService","router","login$","action","authenticate","error","loginSuccess$","navigate","dispatch","CoreModule","HeaderModule","HeaderComponent","templateUrl","styleUrls"],"mappings":"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","file":"default~modules-home-home-module~modules-welcome-welcome-module-es5.js","sourcesContent":["import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /**\n     * Whether the divider is vertically aligned.\n     * @return {?}\n     */\n    get vertical() { return this._vertical; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /**\n     * Whether the divider is an inset divider.\n     * @return {?}\n     */\n    get inset() { return this._inset; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_vertical;\n    /** @type {?} */\n    MatDivider.ngAcceptInputType_inset;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDivider.prototype._inset;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/divider-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/divider/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, ContentChildren, ContentChild, Input, forwardRef, Inject, ViewChild, EventEmitter, isDevMode, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, END, HOME, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatList.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c4 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c5 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\n/** @type {?} */\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/**\n * \\@docs-private\n */\nclass MatListItemBase {\n}\n/** @type {?} */\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatNavList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatNavList.prototype._stateChanges;\n}\nclass MatList extends _MatListMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the state of the list changes.\n         */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _getListType() {\n        /** @type {?} */\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatList.ngAcceptInputType_disabled;\n    /**\n     * Emits when the state of the list changes.\n     * @type {?}\n     */\n    MatList.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatList.prototype._elementRef;\n}\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/**\n * An item within a Material Design list.\n */\nclass MatListItem extends _MatListItemMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?=} navList\n     * @param {?=} list\n     */\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attributed is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                _changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatNavList, 8), ɵngcc0.ɵɵdirectiveInject(MatList, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }] },\n    { type: MatList, decorators: [{ type: Optional }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatListItem.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._isInteractiveList;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._list;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._destroyed;\n    /** @type {?} */\n    MatListItem.prototype._lines;\n    /** @type {?} */\n    MatListItem.prototype._avatar;\n    /** @type {?} */\n    MatListItem.prototype._icon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListItem.prototype._element;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/selection-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n */\nclass MatSelectionListBase {\n}\n/** @type {?} */\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\n/**\n * \\@docs-private\n */\nclass MatListOptionBase {\n}\n/** @type {?} */\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSelectionList)),\n    multi: true\n};\n/**\n * Change event that is being fired whenever the selected state of an option changes.\n */\nclass MatSelectionListChange {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the selection list that emitted the event.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.source;\n    /**\n     * Reference to the option that has been changed.\n     * @type {?}\n     */\n    MatSelectionListChange.prototype.option;\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetector\n     * @param {?} selectionList\n     */\n    constructor(_element, _changeDetector, selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /**\n         * Whether the label should appear before or after the checkbox. Defaults to 'after'\n         */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /**\n     * Theme color of the list option. This sets the color of the checkbox.\n     * @return {?}\n     */\n    get color() { return this._color || this.selectionList.color; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set color(newValue) { this._color = newValue; }\n    /**\n     * Value of the option\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (this.selected && newValue !== this.value && this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Whether the option is selected.\n     * @return {?}\n     */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const list = this.selectionList;\n        if (list._value && list._value.some((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => list.compareWith(value, this._value)))) {\n            this._setSelected(true);\n        }\n        /** @type {?} */\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        }));\n        this._inputsInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this.selected = false;\n            }));\n        }\n        /** @type {?} */\n        const hadFocus = this._hasFocus;\n        /** @type {?} */\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /**\n     * Toggles the selection state of the option.\n     * @return {?}\n     */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the option.\n     * @return {?}\n     */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * \\@docs-private\n     * @return {?}\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /**\n     * Whether this list item should show a ripple effect when clicked.\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    /**\n     * @return {?}\n     */\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /**\n     * Retrieves the DOM element of the component host.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * Sets the selected state of the option. Returns whether the value has changed.\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSelectionList)))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", 0 - 1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSelectionList)),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSelectionList))]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatListOption.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._hasFocus;\n    /** @type {?} */\n    MatListOption.prototype._avatar;\n    /** @type {?} */\n    MatListOption.prototype._icon;\n    /** @type {?} */\n    MatListOption.prototype._lines;\n    /**\n     * DOM element containing the item's text.\n     * @type {?}\n     */\n    MatListOption.prototype._text;\n    /**\n     * Whether the label should appear before or after the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatListOption.prototype.checkboxPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._color;\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._inputsInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatListOption.prototype._changeDetector;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatListOption.prototype.selectionList;\n}\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    /**\n     * @param {?} _element\n     * @param {?} tabIndex\n     * @param {?} _changeDetector\n     */\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /**\n         * Emits a change event whenever the selected state of an option changes.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /**\n         * Theme color of the selection list. This sets the checkbox color for all list options.\n         */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (/**\n         * @param {?} a1\n         * @param {?} a2\n         * @return {?}\n         */\n        (a1, a2) => a1 === a2);\n        this._disabled = false;\n        /**\n         * The currently selected options.\n         */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /**\n         * The tabindex of the selection list.\n         */\n        this._tabIndex = -1;\n        /**\n         * View to model callback that should be called whenever the selected options change.\n         */\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        /**\n         * Emits when the list has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * View to model callback that should be called if the list or its options lost focus.\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n    }\n    /**\n     * Whether the selection list is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /**\n     * Whether selection is limited to one or multiple items (default multiple).\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (isDevMode() && this._contentInitialized) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate((/**\n         * @return {?}\n         */\n        () => false))\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._updateTabIndex();\n        }));\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        }));\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const disableRippleChanges = changes['disableRipple'];\n        /** @type {?} */\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /**\n     * Focuses the selection list.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /**\n     * Selects all of the options.\n     * @return {?}\n     */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /**\n     * Deselects all of the options.\n     * @return {?}\n     */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /**\n     * Sets the focused option of the selection-list.\n     * @param {?} option\n     * @return {?}\n     */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @param {?} option\n     * @return {?} Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        /** @type {?} */\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /**\n     * Passes relevant key presses to our key manager.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const previousFocusIndex = manager.activeItemIndex;\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifier) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    /** @type {?} */\n                    const shouldSelect = this.options.some((/**\n                     * @param {?} option\n                     * @return {?}\n                     */\n                    option => !option.disabled && !option.selected));\n                    this._setAllOptionsSelected(shouldSelect, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /**\n     * Reports a value change to the ControlValueAccessor\n     * @return {?}\n     */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            /** @type {?} */\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /**\n     * Emits a change event if the selected state of an option changed.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitChangeEvent(option) {\n        this.selectionChange.emit(new MatSelectionListChange(this, option));\n    }\n    /**\n     * When the selection list is focused, we want to move focus to an option within the list. Do this\n     * by setting the appropriate option to be active.\n     * @return {?}\n     */\n    _onFocus() {\n        /** @type {?} */\n        const activeIndex = this._keyManager.activeItemIndex;\n        if (!activeIndex || (activeIndex === -1)) {\n            // If there is no active index, set focus to the first option.\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            // Otherwise, set focus to the active option.\n            this._keyManager.setActiveItem(activeIndex);\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} values\n     * @return {?}\n     */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Sets the selected options based on the specified values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _setOptionsFromValues(values) {\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._setSelected(false)));\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            /** @type {?} */\n            const correspondingOption = this.options.find((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            }));\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        }));\n    }\n    /**\n     * Returns the values of the selected options.\n     * @private\n     * @return {?}\n     */\n    _getSelectedOptionValues() {\n        return this.options.filter((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.selected)).map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.value));\n    }\n    /**\n     * Toggles the state of the currently focused option if enabled.\n     * @private\n     * @return {?}\n     */\n    _toggleFocusedOption() {\n        /** @type {?} */\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            /** @type {?} */\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     * @private\n     * @param {?} isSelected\n     * @param {?=} skipDisabled\n     * @return {?}\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        /** @type {?} */\n        let hasChanged = false;\n        this.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                hasChanged = true;\n            }\n        }));\n        if (hasChanged) {\n            this._reportValueChange();\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /**\n     * Returns the index of the specified list option.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /**\n     * Marks all the options to be checked in the next change detection run.\n     * @private\n     * @return {?}\n     */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option._markForCheck()));\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     * @private\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        }));\n    }\n    /**\n     * Updates the tabindex based upon if the selection list is empty.\n     * @private\n     * @return {?}\n     */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSelectionList_focus_HostBindingHandler() { return ctx._onFocus(); })(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(focus)': '_onFocus()',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0;position:relative}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;width:100%;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatSelectionList.ngAcceptInputType_multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._contentInitialized;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._keyManager;\n    /**\n     * The option components contained within this selection-list.\n     * @type {?}\n     */\n    MatSelectionList.prototype.options;\n    /**\n     * Emits a change event whenever the selected state of an option changes.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectionChange;\n    /**\n     * Tabindex of the selection list.\n     * \\@breaking-change 11.0.0 Remove `tabIndex` input.\n     * @type {?}\n     */\n    MatSelectionList.prototype.tabIndex;\n    /**\n     * Theme color of the selection list. This sets the checkbox color for all list options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.color;\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     * @type {?}\n     */\n    MatSelectionList.prototype.compareWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._disabled;\n    /**\n     * The currently selected options.\n     * @type {?}\n     */\n    MatSelectionList.prototype.selectedOptions;\n    /**\n     * The tabindex of the selection list.\n     * @type {?}\n     */\n    MatSelectionList.prototype._tabIndex;\n    /**\n     * View to model callback that should be called whenever the selected options change.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._onChange;\n    /**\n     * Keeps track of the currently-selected value.\n     * @type {?}\n     */\n    MatSelectionList.prototype._value;\n    /**\n     * Emits when the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._destroyed;\n    /**\n     * View to model callback that should be called if the list or its options lost focus.\n     * @type {?}\n     */\n    MatSelectionList.prototype._onTouched;\n    /**\n     * Whether the list has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._isDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelectionList.prototype._changeDetector;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/list-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n        MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatSelectionList,\n        MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList,\n        MatNavList,\n        MatListItem,\n        MatListAvatarCssMatStyler,\n        MatLineModule,\n        MatCommonModule,\n        MatListIconCssMatStyler,\n        MatListSubheaderCssMatStyler,\n        MatPseudoCheckboxModule,\n        MatSelectionList,\n        MatListOption,\n        MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/list/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, takeUntil, distinctUntilChanged, map, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material drawers.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst matDrawerAnimations = {\n    /**\n     * Animation that slides a drawer in and out.\n     */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/drawer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Configures whether drawers should use auto sizing by default.\n * @type {?}\n */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatDrawerContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatDrawerContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatDrawerContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContent.prototype._changeDetectorRef;\n    /** @type {?} */\n    MatDrawerContent.prototype._container;\n}\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _focusMonitor\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _doc\n     * @param {?=} _container\n     */\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this._animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this._animationEnd = new Subject();\n        /**\n         * Current state of the sidenav animation.\n         */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /**\n         * Event emitted when the drawer open state is changed.\n         */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((/**\n         * @param {?} opened\n         * @return {?}\n         */\n        (opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = (/** @type {?} */ (this._doc.activeElement));\n                }\n                this._takeFocus();\n            }\n            else {\n                this._restoreFocus();\n            }\n        }));\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            ((/** @type {?} */ (fromEvent(this._elementRef.nativeElement, 'keydown')))).pipe(filter((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            })), takeUntil(this._destroyed)).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }))));\n        }));\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        }));\n    }\n    /**\n     * The side that the drawer is attached to.\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /**\n     * Mode of the drawer; one of 'over', 'push' or 'side'.\n     * @return {?}\n     */\n    get mode() { return this._mode; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /**\n     * Whether the drawer can be closed with the escape key or by clicking on the backdrop.\n     * @return {?}\n     */\n    get disableClose() { return this._disableClose; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     * @return {?}\n     */\n    get autoFocus() {\n        /** @type {?} */\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     * @return {?}\n     */\n    get opened() { return this._opened; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Event emitted when the drawer has been opened.\n     * @return {?}\n     */\n    get _openedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started opening.\n     * @return {?}\n     */\n    get openedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState.indexOf('open') === 0)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has been closed.\n     * @return {?}\n     */\n    get _closedStream() {\n        return this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Event emitted when the drawer has started closing.\n     * @return {?}\n     */\n    get closedStart() {\n        return this._animationStarted.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e.fromState !== e.toState && e.toState === 'void')), map((/**\n         * @return {?}\n         */\n        () => { })));\n    }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     * @private\n     * @return {?}\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then((/**\n         * @param {?} hasMovedFocus\n         * @return {?}\n         */\n        hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        }));\n    }\n    /**\n     * If focus is currently inside the drawer, restores it to where it was before the drawer\n     * opened.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        /** @type {?} */\n        const activeEl = this._doc && this._doc.activeElement;\n        if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n            // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n            if (this._elementFocusedBeforeDrawerWasOpened) {\n                this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n            }\n            else {\n                this._elementRef.nativeElement.blur();\n            }\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /**\n     * Close the drawer.\n     * @return {?}\n     */\n    close() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     * @param {?=} isOpen Whether the drawer should be open.\n     * @param {?=} openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     * @return {?}\n     */\n    toggle(isOpen = !this.opened, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            this._restoreFocus();\n        }\n        this._updateFocusTrapState();\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this.openedChange.pipe(take(1)).subscribe((/**\n             * @param {?} open\n             * @return {?}\n             */\n            open => resolve(open ? 'open' : 'close')));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    get _width() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /**\n     * Updates the enabled state of the focus trap.\n     * @private\n     * @return {?}\n     */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", onPositionChanged: \"positionChanged\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\n/** @nocollapse */\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_disableClose;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_autoFocus;\n    /** @type {?} */\n    MatDrawer.ngAcceptInputType_opened;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n    /**\n     * Whether the drawer is initialized. Used for disabling the initial animation.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._enableAnimations;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._mode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._disableClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._autoFocus;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._opened;\n    /**\n     * How the sidenav was opened (keypress, mouse click etc.)\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._openedVia;\n    /**\n     * Emits whenever the drawer has started animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationStarted;\n    /**\n     * Emits whenever the drawer is done animating.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationEnd;\n    /**\n     * Current state of the sidenav animation.\n     * @type {?}\n     */\n    MatDrawer.prototype._animationState;\n    /**\n     * Event emitted when the drawer open state is changed.\n     * @type {?}\n     */\n    MatDrawer.prototype.openedChange;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._destroyed;\n    /**\n     * Event emitted when the drawer's position changes.\n     * @type {?}\n     */\n    MatDrawer.prototype.onPositionChanged;\n    /**\n     * An observable that emits when the drawer mode changes. This is used by the drawer container to\n     * to know when to when the mode changes so it can adapt the margins on the content.\n     * @type {?}\n     */\n    MatDrawer.prototype._modeChanged;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusTrapFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawer.prototype._doc;\n    /**\n     * @deprecated `_container` parameter to be made required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatDrawer.prototype._container;\n}\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    /**\n     * @param {?} _dir\n     * @param {?} _element\n     * @param {?} _ngZone\n     * @param {?} _changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} defaultAutosize\n     * @param {?=} _animationMode\n     */\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * Drawers that belong to this container.\n         */\n        this._drawers = new QueryList();\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            }));\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n        this._autosize = defaultAutosize;\n    }\n    /**\n     * The drawer child with the `start` position.\n     * @return {?}\n     */\n    get start() { return this._start; }\n    /**\n     * The drawer child with the `end` position.\n     * @return {?}\n     */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     * @return {?}\n     */\n    get autosize() { return this._autosize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     * @return {?}\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /**\n     * Reference to the CdkScrollable instance that wraps the scrollable content.\n     * @return {?}\n     */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        (drawer) => {\n            // @breaking-change 10.0.0 Remove `_container` check once container parameter is required.\n            this._drawers.reset(drawer.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => !item._container || item._container === this)));\n            this._drawers.notifyOnChanges();\n        }));\n        this._drawers.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validateDrawers();\n            this._drawers.forEach((/**\n             * @param {?} drawer\n             * @return {?}\n             */\n            (drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            }));\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n        takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => this.updateContentMargins()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Calls `open` of both start and end drawers\n     * @return {?}\n     */\n    open() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.open()));\n    }\n    /**\n     * Calls `close` of both start and end drawers\n     * @return {?}\n     */\n    close() {\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer.close()));\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     * @return {?}\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        /** @type {?} */\n        let left = 0;\n        /** @type {?} */\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._width;\n            }\n            else if (this._left.mode == 'push') {\n                /** @type {?} */\n                const width = this._left._width;\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._width;\n            }\n            else if (this._right.mode == 'push') {\n                /** @type {?} */\n                const width = this._right._width;\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || (/** @type {?} */ (null));\n        right = right || (/** @type {?} */ (null));\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => this._contentMarginChanges.next(this._contentMargins)));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => this._doCheckSubject.next()));\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event.fromState !== event.toState)), takeUntil(this._drawers.changes))\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n             * @return {?}\n             */\n            () => this._setContainerClass(drawer.opened)));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._validateDrawers();\n            }));\n        }));\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element.\n     * @private\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _setContainerClass(isAdd) {\n        /** @type {?} */\n        const classList = this._element.nativeElement.classList;\n        /** @type {?} */\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     * @private\n     * @return {?}\n     */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        }));\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     * @private\n     * @return {?}\n     */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    /**\n     * @return {?}\n     */\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawer();\n    }\n    /**\n     * @return {?}\n     */\n    _closeModalDrawer() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer)))\n            .forEach((/**\n         * @param {?} drawer\n         * @return {?}\n         */\n        drawer => (/** @type {?} */ (drawer)).close()));\n    }\n    /**\n     * @return {?}\n     */\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    /**\n     * @private\n     * @param {?} drawer\n     * @return {?}\n     */\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_autosize;\n    /** @type {?} */\n    MatDrawerContainer.ngAcceptInputType_hasBackdrop;\n    /**\n     * All drawers in the container. Includes drawers from inside nested containers.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._allDrawers;\n    /**\n     * Drawers that belong to this container.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._drawers;\n    /** @type {?} */\n    MatDrawerContainer.prototype._content;\n    /** @type {?} */\n    MatDrawerContainer.prototype._userContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._autosize;\n    /** @type {?} */\n    MatDrawerContainer.prototype._backdropOverride;\n    /**\n     * Event emitted when the drawer backdrop is clicked.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype.backdropClick;\n    /**\n     * The drawer at the start/end position, independent of direction.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._start;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._end;\n    /**\n     * The drawer at the left/right. When direction changes, these will change as well.\n     * They're used as aliases for the above to set the left/right style properly.\n     * In LTR, _left == _start and _right == _end.\n     * In RTL, _left == _end and _right == _start.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._left;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._right;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._destroyed;\n    /**\n     * Emits on every ngDoCheck. Used for debouncing reflows.\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._doCheckSubject;\n    /**\n     * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n     * drawer is open. We use margin rather than transform even for push mode because transform breaks\n     * fixed position elements inside of the transformed element.\n     * @type {?}\n     */\n    MatDrawerContainer.prototype._contentMargins;\n    /** @type {?} */\n    MatDrawerContainer.prototype._contentMarginChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatDrawerContainer.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavContent extends MatDrawerContent {\n    /**\n     * @param {?} changeDetectorRef\n     * @param {?} container\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     */\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatSidenavContainer))), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatSidenavContainer)),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatSidenavContainer))]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /**\n     * Whether the sidenav is fixed in the viewport.\n     * @return {?}\n     */\n    get fixedInViewport() { return this._fixedInViewport; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     * @return {?}\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     * @return {?}\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedInViewport;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedTopGap;\n    /** @type {?} */\n    MatSidenav.ngAcceptInputType_fixedBottomGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedInViewport;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedTopGap;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSidenav.prototype._fixedBottomGap;\n}\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSidenavContainer.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    MatSidenavContainer.prototype._allDrawers;\n    /** @type {?} */\n    MatSidenavContainer.prototype._content;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/sidenav-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ],\n        CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule,\n        MatDrawer,\n        MatDrawerContainer,\n        MatDrawerContent,\n        MatSidenav,\n        MatSidenavContainer,\n        MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/sidenav/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffects } from './store/auth.effects';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromAuth from 'src/app/core/auth/store/auth.reducer';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromAuth.authFeatureKey, fromAuth.reducer),\n    EffectsModule.forFeature([AuthEffects]),\n  ],\n})\nexport class AuthModule {}\n","import { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  constructor() {}\r\n  authenticate(username, password) {\r\n    return of(true).pipe(delay(500));\r\n  }\r\n}\r\n","import { Router } from '@angular/router';\nimport { AuthService } from './../services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, concatMap, exhaustMap, tap } from 'rxjs/operators';\nimport { EMPTY, of } from 'rxjs';\n\nimport * as AuthActions from './auth.actions';\n\n@Injectable()\nexport class AuthEffects {\n  login$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.login),\n      // Use exhaustMap to not make additional \"requests\" after the first one\n      exhaustMap((action) =>\n        this.authService.authenticate(action.username, action.password).pipe(\n          map((data) =>\n            AuthActions.loginSuccess({ username: action.username })\n          ),\n          catchError((error) => of(AuthActions.loginFailiure({ error })))\n        )\n      )\n    );\n  });\n\n  loginSuccess$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(AuthActions.loginSuccess),\n        tap((action) => {\n          this.router.navigate(['']);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n}\n","import { HeaderModule } from './header/header.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, HeaderModule],\n  exports: [HeaderModule, AuthModule],\n})\nexport class CoreModule {}\n","import { RouterModule } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatSidenavModule,\n    RouterModule,\n  ],\n})\nexport class HeaderModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <span>Books app</span>\n      <span class=\"spacer\"></span>\n      <div>\n        <a [routerLink]=\"['/books/search']\" mat-button>\n          <mat-icon>search</mat-icon>\n          Search\n        </a>\n        <a [routerLink]=\"['/books/wishlist']\" mat-button>\n          <mat-icon>star</mat-icon>\n          Wishlist\n        </a>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</div>\n"]}